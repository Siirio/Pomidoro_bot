package timer;

import model.UserSession;
import service.StatisticsService;
import ui.KeyboardFactory;

public class PomodoroTimer {
    private final UserSession session;
    private final StatisticsService statisticsService;

    public PomodoroTimer(UserSession session, StatisticsService statisticsService) {
        this.session = session;
        this.statisticsService = statisticsService;
    }

    public void startWork() {
        startWork(25 * 60); // default 25 min
    }

    public void startWork(int durationSeconds) {
        int minutes = durationSeconds / 60;
        session.sendMessage("üçÖ –ü–æ–º–∏–¥–æ—Ä–∫–∞ –Ω–∞—á–∞–ª–∞—Å—å! –†–∞–±–æ—Ç–∞–π " + minutes + " –º–∏–Ω—É—Ç.", KeyboardFactory.mainMenu());
        TimerThread timer = new TimerThread(session, durationSeconds, () -> {
            statisticsService.recordPomodoro(session.getChatId(), durationSeconds);
            session.sendMessage("‚è∞ –í—Ä–µ–º—è –∑–∞–∫–æ–Ω—á–∏–ª–æ—Å—å! –ü–æ—Ä–∞ –æ—Ç–¥—ã—Ö–∞—Ç—å.", KeyboardFactory.mainMenu());
            startRest();
        }, TimerThread.Type.WORK);
        session.setTimer(timer);
    }

    private void startRest() {
        session.sendMessage("‚òï –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è 5-–º–∏–Ω—É—Ç–Ω—ã–π –ø–µ—Ä–µ—Ä—ã–≤.", KeyboardFactory.mainMenu());
        TimerThread timer = new TimerThread(session, 5 * 60, () -> {
            statisticsService.recordRest(session.getChatId());
            session.sendMessage("üîî –ü–µ—Ä–µ—Ä—ã–≤ –∑–∞–∫–æ–Ω—á–∏–ª—Å—è! –ì–æ—Ç–æ–≤ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —Ä–∞—É–Ω–¥—É?", KeyboardFactory.mainMenu());
        }, TimerThread.Type.REST);
        session.setTimer(timer);
    }
}